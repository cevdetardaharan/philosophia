---
import PhilosopherLayout from "../../../layouts/PhilosopherLayout.astro";
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const pages = await getCollection("philosopher");

  const paths = pages.map((page) => {
    const [lang, ...slug] = page.slug.split("/");
    return { params: { lang, slug: slug.join("/") || undefined }, props: page };
  });

  return paths;
}

const page = Astro.props;

const language = getLangFromUrl(Astro.url);
const t = useTranslations(language);
---

<PhilosopherLayout
  title={page.data.name}
  description={page.data.bio}
  image={page.data.image.src}
>
  <header class="flow">
    <h1>{page.data.name}</h1>
    <Image src={page.data.image} alt="" height={400}/>
    <p>{page.data.bio}</p>
  </header>

  <h2>{t("philosopher.nutshell")}</h2>
  <p><strong>{t("philosopher.introduction")}: </strong> {page.data.nutshell.introduction}</p>

  <h3>{t("philosopher.concepts")}</h3>
  <dl>
    {
      page.data.nutshell.concepts.map(
        (concept: { title: string; description: string }) => (
          <>
            <dt><strong>{concept.title}</strong></dt>
            <dd>{concept.description}</dd>
            <br>
          </>
        )
      )
    }
  </dl>
  <h3>{t("philosopher.quotes")}</h3>
  <ul>
    {
      page.data.nutshell.quotes.map((quote: string) => (
        <li>
          <q>{quote}</q>
        </li>
      ))
    }
  </ul>

  <h2>{t("philosopher.life")}</h2>
  <p><strong>{t("philosopher.early_life")}: </strong> {page.data.life.early_life}</p>
  <h3>{t("philosopher.works")}</h3>
  <ul>
    {page.data.life.works.map((work: string) => <li>{work}</li>)}
  </ul>
  <p><strong>{t("philosopher.later_life")}: </strong> {page.data.life.later_life}</p>

  <h2>{t("philosopher.ideas.title")}</h2>
  {
    page.data.ideas.map(
      (idea: {
        title: string;
        explanation: string;
        impact: string;
        funfact: string;
      }) => (
        <>
          <h3>{idea.title}</h3>
          <ul>
            <li>
              <strong>{t("philosopher.ideas.explanation")}: </strong> {idea.explanation}
            </li>
            <li>
              <strong>{t("philosopher.ideas.impact")}: </strong> {idea.impact}
            </li>
            <li>
              <strong>{t("philosopher.ideas.funfact")}: </strong> {idea.funfact}
            </li>
          </ul>
        </>
      )
    )
  }

  <h2>{t("philosopher.legacy.title")}</h2>
  <p><strong>{t("philosopher.overview")}: </strong> {page.data.legacy.overview}</p>
  <p><strong>{t("philosopher.legacy.followers")}: </strong> {page.data.legacy.followers}</p>
  <p><strong>{t("philosopher.legacy.pop")}: </strong> {page.data.legacy.pop}</p>

  <h2>{t("philosopher.criticism.title")}</h2>
  <p><strong>{t("philosopher.overview")}: </strong> {page.data.criticism.overview}</p>
  <p><strong>{t("philosopher.criticism.critiques")}: </strong> {page.data.criticism.critiques}</p>
  <p><strong>{t("philosopher.criticism.response")}: </strong> {page.data.criticism.response}</p>

  <footer class="flow">
    <h2>{t("philosopher.resources.title")}</h2>
    <h3>{t("philosopher.resources.reading")}</h3>
    <ul>
      {page.data.resources.reading.map((reading: string) => <li>{reading}</li>)}
    </ul>
    <h3>{t("philosopher.resources.online")}</h3>
    <ul>
      {page.data.resources.online.map((online: string) => <li>{online}</li>)}
    </ul>
    <h3>{t("philosopher.resources.academia")}</h3>
    <ul>
      {
        page.data.resources.academia.map((academia: string) => (
          <li>{academia}</li>
        ))
      }
    </ul>
  </footer>
</PhilosopherLayout>
